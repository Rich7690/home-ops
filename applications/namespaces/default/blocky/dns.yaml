---
apiVersion: v1
kind: Service
metadata:
  name: blocky
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  loadBalancerIP: 192.168.48.3
  selector:
    app: blocky
  ports:
  - port: 53
    targetPort: dns
    protocol: UDP
    appProtocol: domain
    name: dns
  - port: 80
    name: http
    protocol: TCP
    targetPort: http

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: blocky
spec:
  maxUnavailable: 0
  selector:
    matchLabels:
      app: blocky
  unhealthyPodEvictionPolicy: IfHealthyBudget
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: blocky
spec:
  minReadySeconds: 5
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: blocky
  template:
    metadata:
      labels:
        app: blocky
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: http
    spec:
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - "1.1.1.2"
          - "1.0.0.2"
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: conf
          configMap:
            name: blocky-conf
            optional: false
      containers:
        - name: main
          image: ghcr.io/0xerr0r/blocky:v0.22@sha256:ba17812054a15b58ac80772afe404e7caa1da8c972f0c9ff7754eb3924fd5f57
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
            tcpSocket:
              port: 53
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
            tcpSocket:
              port: 53
          env:
           - name: BLOCKY_CONFIG_FILE
             value: /config/config.yml
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            privileged: false
            capabilities:
              drop:
                - "ALL"
              add:
                - NET_BIND_SERVICE
                #- NET_RAW
          volumeMounts:
            - mountPath: /config
              name: conf
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
          ports:
            - containerPort: 53
              protocol: UDP
              name: dns
            - containerPort: 4000
              protocol: TCP
              name: http
