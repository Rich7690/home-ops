---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        app: grafana
    name: grafana
    namespace: default
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
        matchLabels:
            app: grafana
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            labels:
                app: grafana
        spec:
            automountServiceAccountToken: true
            containers:
                - env:
                      - name: GF_PATHS_CONFIG
                        value: /var/lib/grafana/grafana.ini
                  image: grafana/grafana:9.1.5@sha256:05f1ea7c4b6aef700e007e42f86380d28263cde027f4e950220aa1ba661fb01b
                  imagePullPolicy: IfNotPresent
                  name: grafana
                  ports:
                      - containerPort: 3000
                        name: http
                        protocol: TCP
                  resources:
                      limits:
                          cpu: "4"
                          memory: 1G
                      requests:
                          cpu: 250m
                          memory: 256Mi
                  securityContext:
                      allowPrivilegeEscalation: false
                      privileged: false
                      readOnlyRootFilesystem: false
                      runAsGroup: 997
                      runAsNonRoot: true
                      runAsUser: 998
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                      - mountPath: /var/lib/grafana
                        mountPropagation: None
                        name: config
            dnsPolicy: ClusterFirst
            enableServiceLinks: true
            nodeSelector:
                kubernetes.io/hostname: virtworkerone
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            shareProcessNamespace: false
            terminationGracePeriodSeconds: 30
            volumes:
                - hostPath:
                      path: /var/mnt/cache/configs/grafana
                  name: config
---
apiVersion: v1
kind: Service
metadata:
    labels:
        app: grafana
    name: grafana
    namespace: default
spec:
    internalTrafficPolicy: Cluster
    ipFamilies:
        - IPv4
    ipFamilyPolicy: SingleStack
    ports:
        - name: http
          port: 3000
          protocol: TCP
          targetPort: http
    selector:
        app: grafana
    sessionAffinity: None
    type: ClusterIP
