---
apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        app: redis
    name: redis
    namespace: default
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 3
    selector:
        matchLabels:
            app: redis
    strategy:
       type: Recreate
    template:
        metadata:
            labels:
                app: redis
        spec:
            automountServiceAccountToken: true
            containers:
                - command:
                      - redis-server
                      - --appendonly
                      - "yes"
                  image: redis:8-alpine@sha256:59b6e694653476de2c992937ebe1c64182af4728e54bb49e9b7a6c26614d8933
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                      failureThreshold: 3
                      initialDelaySeconds: 5
                      periodSeconds: 10
                      successThreshold: 1
                      tcpSocket:
                          port: 6379
                      timeoutSeconds: 1
                  name: redis
                  ports:
                      - containerPort: 6379
                        name: redis
                        protocol: TCP
                  readinessProbe:
                      failureThreshold: 3
                      initialDelaySeconds: 5
                      periodSeconds: 10
                      successThreshold: 1
                      tcpSocket:
                          port: 6379
                      timeoutSeconds: 1
                  resources:
                      limits:
                          memory: 512Mi
                      requests:
                          cpu: 10m
                          memory: 128Mi
                  securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                          drop:
                              - ALL
                      privileged: false
                      readOnlyRootFilesystem: true
                      runAsGroup: 997
                      runAsNonRoot: true
                      runAsUser: 998
                      seccompProfile:
                        type: RuntimeDefault
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                      - mountPath: /data
                        mountPropagation: None
                        name: data
            dnsPolicy: ClusterFirst
            enableServiceLinks: true
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            shareProcessNamespace: false
            terminationGracePeriodSeconds: 30
            volumes:
                - name: data
                  persistentVolumeClaim:
                    claimName: redis-zfs
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    labels:
        app: redis
    name: redis
    namespace: default
spec:
    egress: []
    ingress:
        - from:
              - podSelector:
                    matchExpressions:
                        - key: app
                          operator: In
                          values:
                              - renovate
              - podSelector:
                    matchExpressions:
                        - key: app.kubernetes.io/name
                          operator: In
                          values:
                              - paperless
    podSelector:
        matchLabels:
            app: redis
    policyTypes:
        - Ingress
        - Egress
