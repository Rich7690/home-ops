---
# Source: qbittorrent/charts/qbittorrent/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: qbittorrent-vpn
  namespace: default
  labels:
    app.kubernetes.io/name: qbittorrent
    app.kubernetes.io/instance: qbit
data:
  up.sh: |-
    #!/bin/bash
    set -xe
    echo "connected" > /shared/vpnstatus
  down.sh: |-
    #!/bin/bash
    set -xe
    echo "disconnected" > /shared/vpnstatus
---
# Source: qbittorrent/charts/qbittorrent/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: qbittorrent
  namespace: default
  labels:
    app.kubernetes.io/instance: qbit
    app.kubernetes.io/name: qbittorrent
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: qbittorrent
    app.kubernetes.io/instance: qbit
---
# Source: qbittorrent/charts/qbittorrent/templates/common.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: qbittorrent
  namespace: default
  labels:
    app.kubernetes.io/instance: qbit
    app.kubernetes.io/name: qbittorrent
spec:
  revisionHistoryLimit: 3
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: qbittorrent
      app.kubernetes.io/instance: qbit
  serviceName: qbittorrent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: qbittorrent
        app.kubernetes.io/instance: qbit
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: qbittorrent
          image: "ghcr.io/home-operations/qbittorrent:5.0.4@sha256:3b7e6671b4e6b8ab1366ca8a038776638c77cc8110dc74c257eb14568d43c614"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsGroup: 568
            runAsUser: 998
          env:
            - name: QBITTORRENT__BT_PORT
              value: "58118"
            - name: QBITTORRENT__PORT
              value: "8080"
            - name: TZ
              value: America/Los_Angeles
            - name: UMASK
              value: "022"
            - name: WAIT_FOR_VPN
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /media
            - name: shared
              mountPath: /shared
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "set -e -o pipefail; OUT=$(/usr/bin/curl -sf --max-time 5 https://ifconfig.co/asn); set +e; if [ \"$OUT\" = \"AS209\" ]; then echo \"Failure: $OUT\"; exit 1; fi"
            initialDelaySeconds: 10
            failureThreshold: 3
            timeoutSeconds: 10
            periodSeconds: 60
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 5
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
        - env:
          - name: IPTABLES_BACKEND
            value: nft
          - name: KILLSWITCH
            value: "true"
          - name: KILLSWITCH_EXCLUDEDNETWORKS_IPV4
            value: 10.244.0.0/16;192.168.5.0/24;10.96.0.0/12
          - name: TZ
            value: America/Los_Angeles
          image: ghcr.io/k8s-at-home/wireguard:v1.0.20210914@sha256:4dd54954cbd06d92d8c8fc6b10871eb07a0c1869edfe7a15029f1a7d3178d432
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              squat.ai/tun: "1"
            limits:
              squat.ai/tun: "1"
          name: wireguard
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - SYS_MODULE
              - CAP_AUDIT_WRITE
            privileged: true
            runAsGroup: 568
            runAsUser: 568
          volumeMounts:
          - mountPath: /etc/wireguard/wg0.conf
            name: vpnconfig
            subPath: vpnConfigfile
          - mountPath: /config/up.sh
            name: vpnscript
            subPath: up.sh
          - mountPath: /config/down.sh
            name: vpnscript
            subPath: down.sh
          - mountPath: /shared
            name: shared
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: qbit-config-zfs
        - name: media
          persistentVolumeClaim:
            claimName: media-pvc-zfs
        - name: shared
          emptyDir:
            {}
        - name: vpnconfig
          secret:
            items:
            - key: vpnConfigfile
              path: vpnConfigfile
            secretName: vpn-config
        - name: vpnscript
          configMap:
            items:
            - key: up.sh
              mode: 511
              path: up.sh
            - key: down.sh
              mode: 511
              path: down.sh
            name: qbittorrent-vpn
