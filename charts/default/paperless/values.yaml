paperless:
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    privileged: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
  podAnnotations:
    kyverno-skip: 'true'
  envFrom:
    - secretRef:
        name: paperless
  image:
    repository: ghcr.io/paperless-ngx/paperless-ngx
    tag: 2.6.2@sha256:9483e2fff0b50c1b5f90c6e6d085fc3551f9dd7d039c29efb3ace712ba9ee42e
  controller:
    replicas: 1
  env:
    PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTH_REQUEST_USER
    PAPERLESS_ENABLE_HTTP_REMOTE_USER: true
    PAPERLESS_REDIS: redis://redis:6379
    PAPERLESS_PORT: 8000
    PAPERLESS_TIME_ZONE: America/Los_Angeles
    PAPERLESS_CONSUMER_POLLING: "10"
    PAPERLESS_CONSUMER_POLLING_RETRY_COUNT: "10"
    PAPERLESS_CONSUMER_POLLING_DELAY: "10"
    #USERMAP_GID: 997
    #USERMAP_UID: 998
    PAPERLESS_URL: ""
  ingress:
    main:
      enabled: false
  persistence:
    consume:
      enabled: true
      existingClaim: paperless-consume-zfs
      type: pvc
      retain: true
      accessMode: ReadWriteOnce
    data:
      enabled: true
      existingClaim: paperless-data-zfs
      type: pvc
      retain: false
      accessMode: ReadWriteOnce
    media:
      enabled: true
      existingClaim: paperless-media-zfs
      type: pvc
      retain: false
      accessMode: ReadWriteOnce
  resources:
    limits:
      memory: 4G
    requests:
      cpu: 300m
      memory: 4G
